package com.example.productsearch;import android.os.Bundle;import android.support.annotation.NonNull;import android.support.annotation.Nullable;import android.support.v4.app.Fragment;import android.text.Editable;import android.text.TextWatcher;import android.util.Log;import android.view.Gravity;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.AdapterView;import android.widget.ArrayAdapter;import android.widget.AutoCompleteTextView;import android.widget.CheckBox;import android.widget.CompoundButton;import android.widget.LinearLayout;import android.widget.RadioGroup;import android.widget.Spinner;import android.widget.TextView;import android.widget.Toast;import com.android.volley.Request;import com.android.volley.RequestQueue;import com.android.volley.Response;import com.android.volley.VolleyError;import com.android.volley.toolbox.StringRequest;import com.android.volley.toolbox.Volley;import org.json.JSONArray;import org.json.JSONException;import org.json.JSONObject;import java.io.UnsupportedEncodingException;import java.net.URLEncoder;import java.util.ArrayList;import java.util.List;import static android.view.View.GONE;public class FragmentSearch extends Fragment{    private View view;    private String MY_SERVER_URL = "http://www.ProductSearch2.us-east-2.elasticbeanstalk.com/user?";    private Spinner category;    private AutoCompleteTextView zip_view;    private JSONObject obj;    private AutoSuggestAdapter autoSuggestAdapter;    public FragmentSearch() {    }    @Override    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {        view = inflater.inflate(R.layout.activity_search, container, false);//        AutoCompleteTextView searchPlace = view.findViewById(R.id.zipcode);//        CustomAutoCompleteAdapter adapter = new CustomAutoCompleteAdapter((this.getContext()));//        searchPlace.setAdapter(adapter);        final RadioGroup yourRadioGroup = view.findViewById(R.id.myRadioGroup);        final CheckBox enableSearchbtn = view.findViewById(R.id.nearbysearch);//        final EditText distance = view.findViewById(R.id.milesfrom);//        final EditText zipcode = view.findViewById(R.id.zipcode);////        RadioGroup radioGroup = view.findViewById(R.id.myRadioGroup);//        final TextView from = view.findViewById(R.id.textView8);        final LinearLayout hiddenLayout = view.findViewById(R.id.layout_to_hide);        zip_view = view.findViewById(R.id.zipcode);        autoSuggestAdapter = new AutoSuggestAdapter(getActivity().getApplicationContext(), android.R.layout.simple_dropdown_item_1line);        zip_view.setAdapter(autoSuggestAdapter);        zip_view.setOnItemClickListener(                new AdapterView.OnItemClickListener() {                    @Override                    public void onItemClick(AdapterView<?> parent, View view,                                            int position, long id) {                        zip_view.setText(autoSuggestAdapter.getObject(position));                    }                });        zip_view.addTextChangedListener(new TextWatcher() {            @Override            public void beforeTextChanged(CharSequence s, int start, int count, int after) {            }            @Override            public void onTextChanged(CharSequence s, int start, int before, int count) {                String zip_text = zip_view.getText().toString();                StringBuilder awsURL = new StringBuilder();                awsURL.append(MY_SERVER_URL);                awsURL.append("zip=");                try{                    awsURL.append(URLEncoder.encode(zip_text, "utf-8"));                } catch (UnsupportedEncodingException e){                    e.printStackTrace();                }                String url = awsURL.toString();                RequestQueue queue = Volley.newRequestQueue(getActivity().getApplicationContext());                StringRequest stringRequest = new StringRequest(Request.Method.GET, url, new Response.Listener<String>() {                    @Override                    public void onResponse(String response) {                        try{                            Log.i("ZIP RESPONSE", response);                            dealWithZipCodeAutoComplete(response);                        } catch (Exception e){                        }                    }                }, new Response.ErrorListener() {                    @Override                    public void onErrorResponse(VolleyError error) {                        Log.e("error", error.toString());                        showMessage("Error in Response");                    }                });                queue.add(stringRequest);            }            @Override            public void afterTextChanged(Editable s) {            }        });        enableSearchbtn.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {            @Override            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {                if (isChecked) {//                    distance.setVisibility(View.VISIBLE);//                    yourRadioGroup.setVisibility(View.VISIBLE);//                    zipcode.setVisibility(View.VISIBLE);//                    from.setVisibility(View.VISIBLE);                    hiddenLayout.setVisibility(View.VISIBLE);                } else {//                    distance.setVisibility(View.GONE);//                    yourRadioGroup.setVisibility(View.GONE);//                    zipcode.setVisibility(View.GONE);//                    from.setVisibility(View.GONE);                    hiddenLayout.setVisibility(GONE);                    showMessage("Distance Gone");                }            }        });        yourRadioGroup.setOnCheckedChangeListener(new RadioGroup.OnCheckedChangeListener(){            public void onCheckedChanged(RadioGroup group, int checkedId){                AutoCompleteTextView textViewLocatioNname = view.findViewById(R.id.zipcode);                switch(checkedId)                {                    case R.id.currentlocationradio:                        //showMessage("1!");                        textViewLocatioNname.setEnabled(false);                        break;                    case R.id.zipcoderadio:                        textViewLocatioNname.setEnabled(true);                        //showMessage("2!");                        break;                }            }        });//        distance.setVisibility(View.GONE);//        showMessage("Distance Gone");//        yourRadioGroup.setVisibility(View.GONE);//        zipcode.setVisibility(View.GONE);//        from.setVisibility(View.GONE);        hiddenLayout.setVisibility(GONE);        showMessage("Distance Gone");        TextView err1 = (TextView) view.findViewById(R.id.errormessage1);        err1.setVisibility(GONE);        TextView err2 = (TextView) view.findViewById(R.id.errormessage2);        err2.setVisibility(GONE);        AutoCompleteTextView textViewLocationName1 = view.findViewById(R.id.zipcode);        textViewLocationName1.setEnabled(false);        return view;    }    private void dealWithZipCodeAutoComplete(String response){        List<String> postalCode = new ArrayList<>();        try{            obj = new JSONObject(response);            JSONArray postalCodesArray = obj.getJSONArray("postalCodes");            for (int i = 0; i < postalCodesArray.length(); i++){                JSONObject element = postalCodesArray.getJSONObject(i);                postalCode.add(element.get("postalCode").toString());                Log.i("POSTALCODE", element.get("postalCode").toString());            }            autoSuggestAdapter.setData(postalCode);            autoSuggestAdapter.notifyDataSetChanged();//            ArrayAdapter<String> adapter = new ArrayAdapter<String>(getActivity().getApplicationContext(), android.R.layout.simple_list_item_1, postalCode);//            zip_view.setAdapter(adapter);        } catch (JSONException e){            e.printStackTrace();        }    }    private void showMessage(String txt) {        Toast toast = Toast.makeText(this.getContext(), txt, Toast.LENGTH_LONG);        toast.setGravity(Gravity.BOTTOM, 0, 80);        toast.show();    }    @Override    public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {        super.onViewCreated(view, savedInstanceState);        category = (Spinner) view.findViewById(R.id.category);        ArrayAdapter<CharSequence> categoryAdapter = ArrayAdapter.createFromResource(getContext(),                R.array.CategoryItem, android.R.layout.simple_spinner_dropdown_item);        categoryAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);        category.setAdapter(categoryAdapter);    }}